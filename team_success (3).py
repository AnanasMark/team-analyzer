import streamlit as st
import random
from collections import Counter

# --- –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –ª–æ–≥–∏–∫–∞ ---
def success_level(team, selected_events, expectation, deadline):
    score = 0
    comments = []

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π –∏ —Å–æ—Å—Ç–∞–≤–∞
    role_counts = Counter([p['role'] for p in team])
    if role_counts['Developer'] == 0:
        comments.append("–ù–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ ‚Äî –Ω–µ—á–µ–º —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç.")
        score -= 30
    elif role_counts['Developer'] == 1:
        comments.append("–û–¥–∏–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ ‚Äî —Å–ª–∏—à–∫–æ–º –º–µ–¥–ª–µ–Ω–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞.")
        score -= 10
    elif role_counts['Developer'] >= 4 and role_counts['QA'] <= 1:
        comments.append("–ú–Ω–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –º–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫–æ–≤ ‚Äî –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∞—á–µ—Å—Ç–≤–æ–º.")
        score -= 5

    if role_counts['Project Manager'] > 1 or role_counts['Product Owner'] > 1:
        comments.append("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞, –≤—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ –≤—Å—ë –æ–∫–µ–π?)")

    if role_counts['Project Manager'] == 0 and role_counts['Product Owner'] == 0:
        comments.append("–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ‚Äî –≤—ã—Å–æ–∫–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ä–∞—Å–ø–∞–¥–∞ –∫–æ–º–∞–Ω–¥—ã.")
        score -= 15

    # –ù–∞–≤—ã–∫–∏
    low_skills = [p for p in team if p['skill'] in ['junior', '–Ω–µ–∞–¥–µ–∫–≤–∞—Ç–µ–Ω']]
    if len(low_skills) > len(team) // 2:
        comments.append("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –Ω–∏–∑–∫–∏–º —É—Ä–æ–≤–Ω–µ–º –Ω–∞–≤—ã–∫–æ–≤.")
        score -= 15

    # –ü–æ–≤–µ–¥–µ–Ω–∏–µ
    oppo = [p for p in team if p['behavior'] == '–æ–ø–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–π']
    if len(oppo) >= 2:
        comments.append("–ú–Ω–æ–≥–æ –æ–ø–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º –∏ –∑–∞–º–µ–¥–ª–µ–Ω–∏—é.")
        score -= 10
    elif any(p['behavior'] == '–æ–ø–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–π' for p in team):
        score -= 5

    # –ú–æ—Ç–∏–≤–∞—Ü–∏—è
    if all(p['motivation'] == '–Ω–∏–∑–∫–∞—è' for p in team):
        comments.append("–í—Å—è –∫–æ–º–∞–Ω–¥–∞ —Å –Ω–∏–∑–∫–æ–π –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π ‚Äî –∫—Ä–∞–π–Ω–µ –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ –ø—Ä–æ–≤–∞–ª–∞.")
        score -= 25
    elif sum(1 for p in team if p['motivation'] == '–Ω–∏–∑–∫–∞—è') >= len(team) // 2:
        comments.append("–ú–Ω–æ–≥–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å –Ω–∏–∑–∫–æ–π –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π.")
        score -= 10

    # –°—Ä–æ–∫–∏
    if deadline == "1 –º–µ—Å—è—Ü":
        score -= 15
    elif deadline == "3 –º–µ—Å—è—Ü–∞":
        score += 5
    elif deadline == "6 –º–µ—Å—è—Ü–µ–≤":
        score += 10
    elif deadline == "1 –≥–æ–¥":
        score += 0

    # –û–∂–∏–¥–∞–Ω–∏—è
    if expectation == "–§–∏—á–∞":
        score += 10
    elif expectation == "MVP":
        score += 5
    elif expectation == "–ì–æ—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç":
        score -= 10

    # –í–Ω–µ—à–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
    for e in selected_events:
        if e in ["–∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏", "–±–æ—Ä—å–±–∞ –¥–≤—É—Ö –ª–∏–¥–µ—Ä–æ–≤", "—É—Ö–æ–¥–∏—Ç –∫–ª—é—á–µ–≤–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫", "–ø–µ—Ä–µ–≥—Ä—É–∑ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏", "–Ω–µ—Ç –º–æ—Ç–∏–≤–∞—Ü–∏–∏", "–∏–≥–Ω–æ—Ä –≤ —á–∞—Ç–µ"]:
            comments.append(f"–ù–µ–≥–∞—Ç–∏–≤–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ: {e}")
            score -= 10
        elif e == "–Ω–µ–ø–æ–Ω—è—Ç–Ω–∞—è —Ü–µ–ª—å":
            comments.append("–ù–µ—è—Å–Ω–∞—è —Ü–µ–ª—å –º–æ–∂–µ—Ç –¥–µ–∑–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É.")
            score -= 10
        elif e == "—Å–∏–ª—å–Ω–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è":
            comments.append("–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç: —Å–∏–ª—å–Ω–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è.")
            score += 10
        elif e == "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–∏–¥–±–µ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π":
            comments.append("–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–≤–æ–ª—å–Ω—ã!")
            score += 10
        elif e == "–∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ –æ—Ç QA":
            score += 5

    # –®—Ç—Ä–∞—Ñ –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π, –Ω–æ –∫–æ–º–∞–Ω–¥–∞ –∞–¥–µ–∫–≤–∞—Ç–Ω–∞—è
    if len(selected_events) == 0 and len(comments) == 0 and len(team) >= 5 and all(p['skill'] != '–Ω–µ–∞–¥–µ–∫–≤–∞—Ç–µ–Ω' for p in team):
        score += 15

    # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    score = max(0, min(100, 50 + score))
    probability = score

    if score >= 85:
        result = "–£—Å–ø–µ—à–Ω—ã–π MVP"
    elif score >= 70:
        result = "–ß–∞—Å—Ç–∏—á–Ω—ã–π MVP"
    elif score >= 55:
        result = "–°—ã—Ä–æ–π –ø—Ä–æ—Ç–æ—Ç–∏–ø"
    elif score >= 40:
        result = "–ú–∞–ª–µ–Ω—å–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç"
    elif score >= 20:
        result = "–§–∏—á–∞ –∏–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –¥–µ–º–æ"
    else:
        result = "–ü—Ä–æ–≤–∞–ª"

    return result, probability, comments


# --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit ---

if 'analyzed' not in st.session_state:
    st.session_state.analyzed = False

if st.session_state.analyzed:
    if st.button("üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É"):
        st.session_state.analyzed = False
        st.rerun()

if not st.session_state.analyzed:
    st.title("–ü—Ä–æ–≥–Ω–æ–∑ —É—Å–ø–µ—Ö–∞ –∫–æ–º–∞–Ω–¥—ã")
    st.subheader("–î–æ–±–∞–≤—å—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –æ–∂–∏–¥–∞–Ω–∏—è –∏ –≤–Ω–µ—à–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è")

    team = []
    deadline = st.selectbox("–°—Ä–æ–∫ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞/–ø—Ä–æ–¥—É–∫—Ç–∞", ["", "1 –º–µ—Å—è—Ü", "3 –º–µ—Å—è—Ü–∞", "6 –º–µ—Å—è—Ü–µ–≤", "1 –≥–æ–¥"])
    expectation = st.selectbox("–¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞", ["", "–§–∏—á–∞", "MVP", "–ö–æ–Ω—Ü–µ–ø—Ç", "–ì–æ—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç"])
    external_events = [
        "–∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏",
        "—É—Ö–æ–¥–∏—Ç –∫–ª—é—á–µ–≤–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫",
        "–Ω–µ–ø–æ–Ω—è—Ç–Ω–∞—è —Ü–µ–ª—å",
        "–±–æ—Ä—å–±–∞ –¥–≤—É—Ö –ª–∏–¥–µ—Ä–æ–≤",
        "–∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ –æ—Ç QA",
        "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–∏–¥–±–µ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
        "–ø–µ—Ä–µ–≥—Ä—É–∑ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
        "–Ω–µ—Ç –º–æ—Ç–∏–≤–∞—Ü–∏–∏",
        "—Å–∏–ª—å–Ω–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è",
        "–∏–≥–Ω–æ—Ä –≤ —á–∞—Ç–µ"
    ]
    selected_events = st.multiselect("–í–Ω–µ—à–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è", external_events)
    num_members = st.number_input("–°–∫–æ–ª—å–∫–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ?", min_value=1, max_value=20, value=5)

    roles = ["Product Owner", "Project Manager", "Tech Lead", "Business Analyst", "System Analyst", "Developer", "QA"]
    skill_levels = ["junior", "middle", "senior", "–Ω–µ–∞–¥–µ–∫–≤–∞—Ç–µ–Ω"]
    behavior_types = ["–∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã–π", "—Ñ–ª–µ–≥–º–∞—Ç–∏—á–Ω—ã–π", "–æ–ø–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–π", "—Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–π", "–º–æ–ª—á–∞–ª–∏–≤—ã–π"]
    motivations = ["–≤—ã—Å–æ–∫–∞—è", "—Å—Ä–µ–¥–Ω—è—è", "–Ω–∏–∑–∫–∞—è"]

    st.markdown("**–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã:**")
    for i in range(int(num_members)):
        st.markdown(f"**–£—á–∞—Å—Ç–Ω–∏–∫ {i+1}**")
        cols = st.columns(4)
        with cols[0]:
            role = st.selectbox("–†–æ–ª—å", roles, key=f"role_{i}")
        with cols[1]:
            skill = st.selectbox("–ù–∞–≤—ã–∫", skill_levels, key=f"skill_{i}")
        with cols[2]:
            behavior = st.selectbox("–ü–æ–≤–µ–¥–µ–Ω–∏–µ", behavior_types, key=f"beh_{i}")
        with cols[3]:
            motivation = st.selectbox("–ú–æ—Ç–∏–≤–∞—Ü–∏—è", motivations, key=f"mot_{i}")
        team.append({"role": role, "skill": skill, "behavior": behavior, "motivation": motivation})

    if st.button("–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å"):
        st.session_state.analyzed = True
        st.session_state.team = team
        st.session_state.deadline = deadline
        st.session_state.expectation = expectation
        st.session_state.selected_events = selected_events
        st.rerun()

else:
    result, probability, comments = success_level(
        st.session_state.team,
        st.session_state.selected_events,
        st.session_state.expectation,
        st.session_state.deadline
    )
    st.markdown(f"### üß† –ü—Ä–æ–≥–Ω–æ–∑: **{result}**")
    st.markdown(f"#### üî¢ –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞: **{probability}%**")
    if comments:
        st.markdown("#### üìå –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:")
        for comment in comments:
            st.markdown(f"- {comment}")

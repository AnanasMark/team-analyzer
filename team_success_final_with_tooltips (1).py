import streamlit as st
import random
from collections import Counter

# –û–ø—Ü–∏–∏ –≤—ã–±–æ—Ä–∞
roles = ["Product Owner", "Project Manager", "Tech Lead", "Business Analyst", "System Analyst", "Developer", "QA"]
skill_levels = ["junior", "middle", "senior", "–Ω–µ–∞–¥–µ–∫–≤–∞—Ç–µ–Ω"]
behavior_types = ["–∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã–π", "—Ñ–ª–µ–≥–º–∞—Ç–∏—á–Ω—ã–π", "–æ–ø–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–π", "—Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–π", "–º–æ–ª—á–∞–ª–∏–≤—ã–π"]
motivations = ["–≤—ã—Å–æ–∫–∞—è", "—Å—Ä–µ–¥–Ω—è—è", "–Ω–∏–∑–∫–∞—è"]
external_events = [
    "–∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏",
    "—É—Ö–æ–¥–∏—Ç –∫–ª—é—á–µ–≤–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫",
    "–Ω–µ–ø–æ–Ω—è—Ç–Ω–∞—è —Ü–µ–ª—å",
    "–±–æ—Ä—å–±–∞ –¥–≤—É—Ö –ª–∏–¥–µ—Ä–æ–≤",
    "–∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ –æ—Ç QA",
    "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–∏–¥–±–µ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
    "–ø–µ—Ä–µ–≥—Ä—É–∑ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
    "–Ω–µ—Ç –º–æ—Ç–∏–≤–∞—Ü–∏–∏",
    "—Å–∏–ª—å–Ω–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è",
    "–∏–≥–Ω–æ—Ä –≤ —á–∞—Ç–µ"
]

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit
st.title("–ü—Ä–æ–≥–Ω–æ–∑ —É—Å–ø–µ—Ö–∞ –∫–æ–º–∞–Ω–¥—ã")
st.subheader("–î–æ–±–∞–≤—å—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –æ–∂–∏–¥–∞–Ω–∏—è –∏ –≤–Ω–µ—à–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è")

team = []
st.markdown("**–û–∂–∏–¥–∞–Ω–∏—è –æ—Ç –∫–æ–º–∞–Ω–¥—ã:**")
deadline = st.selectbox("–°—Ä–æ–∫ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞/–ø—Ä–æ–¥—É–∫—Ç–∞ üïí", ["", "1 –º–µ—Å—è—Ü", "3 –º–µ—Å—è—Ü–∞", "6 –º–µ—Å—è—Ü–µ–≤", "1 –≥–æ–¥"], index=0, help="–ß–µ–º –∫–æ—Ä–æ—á–µ —Å—Ä–æ–∫, —Ç–µ–º –≤—ã—à–µ –Ω–∞–≥—Ä—É–∑–∫–∞ –∏ —Ä–∏—Å–∫–∏. –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Å—Ä–æ–∫–∏ ‚Äî 3-6 –º–µ—Å—è—Ü–µ–≤.")
expectation = st.selectbox("–¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ üéØ", ["", "–§–∏—á–∞", "MVP", "–ö–æ–Ω—Ü–µ–ø—Ç", "–ì–æ—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç"], index=0, help="–§–∏—á–∞ ‚Äî –ø—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è. MVP ‚Äî –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –∂–∏–∑–Ω–µ—Å–ø–æ—Å–æ–±–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç. –ö–æ–Ω—Ü–µ–ø—Ç ‚Äî –∏–¥–µ—è –≤ –≤–∏–¥–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞. –ì–æ—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç ‚Äî –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ.")

st.markdown("**–í—ã–±–µ—Ä–∏—Ç–µ –≤–Ω–µ—à–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:**")
selected_events = st.multiselect("–§–∞–∫—Ç–æ—Ä—ã, –≤–ª–∏—è—é—â–∏–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É üåê", external_events, help="–í–Ω–µ—à–Ω–∏–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞, —Å–ø–æ—Å–æ–±–Ω—ã–µ –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –£—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –∫–∞–∫ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ, —Ç–∞–∫ –∏ –¥–µ—Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä—É—é—â–∏–µ.")

num_members = st.number_input("–°–∫–æ–ª—å–∫–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ? üë•", min_value=1, max_value=20, value=5, step=1, help="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–ª–µ–Ω–æ–≤ –∫–æ–º–∞–Ω–¥—ã. –û–ø—Ç–∏–º–∞–ª—å–Ω–æ 5-10 —á–µ–ª–æ–≤–µ–∫.")

for i in range(int(num_members)):
    st.markdown(f"### –£—á–∞—Å—Ç–Ω–∏–∫ {i+1}")
    cols = st.columns(4)
    with cols[0]:
        role = st.selectbox(f"–†–æ–ª—å ‚ùì", roles, key=f"role_{i}", help="–î–æ–ª–∂–Ω–æ—Å—Ç—å –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ")
    with cols[1]:
        skill = st.selectbox(f"–ù–∞–≤—ã–∫ üìö", skill_levels, key=f"skill_{i}", help="–û—Ü–µ–Ω–∫–∞ —É—Ä–æ–≤–Ω—è –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    with cols[2]:
        behavior = st.selectbox(f"–ü–æ–≤–µ–¥–µ–Ω–∏–µ üß†", behavior_types, key=f"beh_{i}", help="–¢–∏–ø –ø–æ–≤–µ–¥–µ–Ω–∏—è –≤–ª–∏—è–µ—Ç –Ω–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –≤ –∫–æ–º–∞–Ω–¥–µ")
    with cols[3]:
        motivation = st.selectbox(f"–ú–æ—Ç–∏–≤–∞—Ü–∏—è üî•", motivations, key=f"mot_{i}", help="–ù–∞—Å—Ç—Ä–æ–π –∏ –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞")
    team.append({"role": role, "skill": skill, "behavior": behavior, "motivation": motivation})

if st.button("–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å"):
    from analyzer import success_level  # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –ª–æ–≥–∏–∫–∞ –æ—Ü–µ–Ω–∫–∏ –≤—ã–Ω–µ—Å–µ–Ω–∞ –≤ analyzer.py
    result, probability, comments = success_level(team, selected_events, expectation, deadline)
    st.markdown(f"### üß† –ü—Ä–æ–≥–Ω–æ–∑: **{result}**")
    st.markdown(f"#### üî¢ –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞: **{probability}%**")
    if comments:
        st.markdown("#### üìå –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:")
        for comment in comments:
            st.markdown(f"- {comment}")

    # –£—Ç–æ—á–Ω–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏–π –≤—ã—Å–æ–∫–æ–≥–æ —à–∞–Ω—Å–∞ —É—Å–ø–µ—Ö–∞
    high_chance_notes = []
    if probability >= 70:
        high_chance_notes.append("–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ —Ä–æ–ª—è–º–∏")
        if any(p['behavior'] == "–∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã–π" for p in team):
            high_chance_notes.append("–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏")
        if all(p['motivation'] != "–Ω–∏–∑–∫–∞—è" for p in team):
            high_chance_notes.append("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∏–∑–∫–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è")
        if any("–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–∏–¥–±–µ–∫" in e for e in selected_events):
            high_chance_notes.append("–ü–æ–ª—É—á–µ–Ω –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–∏–¥–±–µ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ: –ø–æ–ª–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –∞–¥–µ–∫–≤–∞—Ç–Ω—ã–µ —Å—Ä–æ–∫–∏ –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
    required_roles = {"Developer", "QA", "Business Analyst", "Project Manager", "Product Owner"}
    team_roles = set(p['role'] for p in team)
    negative_events = [
        "–∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏", "—É—Ö–æ–¥–∏—Ç –∫–ª—é—á–µ–≤–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫", "–Ω–µ–ø–æ–Ω—è—Ç–Ω–∞—è —Ü–µ–ª—å",
        "–±–æ—Ä—å–±–∞ –¥–≤—É—Ö –ª–∏–¥–µ—Ä–æ–≤", "–ø–µ—Ä–µ–≥—Ä—É–∑ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏", "–Ω–µ—Ç –º–æ—Ç–∏–≤–∞—Ü–∏–∏", "–∏–≥–Ω–æ—Ä –≤ —á–∞—Ç–µ"]
    positive_events = ["–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–∏–¥–±–µ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "—Å–∏–ª—å–Ω–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è", "–∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ –æ—Ç QA"]

    if required_roles.intersection(team_roles) and not any(e in selected_events for e in negative_events + positive_events):
        if deadline in ["3 –º–µ—Å—è—Ü–∞", "6 –º–µ—Å—è—Ü–µ–≤"]:
            probability = max(probability, 95)
            high_chance_notes.append("–ü–æ–ª–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö —É–≥—Ä–æ–∑ –∏ —Å—Ç–∏–º—É–ª–æ–≤, —Å –∞–¥–µ–∫–≤–∞—Ç–Ω—ã–º–∏ —Å—Ä–æ–∫–∞–º–∏ ‚Äî –≤—ã—Å–æ–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å")

    if high_chance_notes:
        st.markdown("#### ‚≠ê –ü–æ—á–µ–º—É —à–∞–Ω—Å—ã –≤—ã—Å–æ–∫–∏:")
        for note in high_chance_notes:
            st.markdown(f"- {note}")

    # –§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥
    if result == "–ü—Ä–æ–≤–∞–ª":
        st.warning("–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ—Å—Ç–∞–≤ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –≤–Ω–µ—à–Ω–∏–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è")
    elif result == "–°—ã—Ä–æ–π –ø—Ä–æ—Ç–æ—Ç–∏–ø":
        st.info("–ï—Å—Ç—å –∑–∞—Ü–µ–ø–∫–∞, –Ω–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π")
    elif result == "–ß–∞—Å—Ç–∏—á–Ω—ã–π MVP":
        st.success("–ö–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–æ –Ω–µ –≤ –ø–æ–ª–Ω–æ–º –æ–±—ä–µ–º–µ")
    elif result == "–£—Å–ø–µ—à–Ω—ã–π MVP":
        st.balloons()
        st.success("–í—ã—Å–æ–∫–∏–π —à–∞–Ω—Å –≤—ã–ø—É—Å—Ç–∏—Ç—å —Ä–∞–±–æ—Ç–∞—é—â–∏–π MVP!")
    elif result.startswith("–§–∏—á–∞") or result.startswith("–ú–∞–ª–µ–Ω—å–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç"):
        st.info("–ß–∞—Å—Ç–∏—á–Ω—ã–π, –Ω–æ –ø–æ–ª–µ–∑–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–æ–∑–º–æ–∂–µ–Ω –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ –Ω–∞ –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á–∞—Ö")